{"version":3,"sources":["components/Cart/Checkout.module.css","components/Cart/Cart.module.css","components/Cart/CartItem.module.css","components/Layout/Header/HeaderCartButton.module.css","components/Meals/MealItem.module.css","components/Layout/Header/Header.module.css","components/Meals/Meals.module.css","components/UI/Modal.module.css","components/Meals/MealsSummary.module.css","components/UI/Input/Input.module.css","components/Meals/MealItemForm.module.css","store/cart-context.tsx","components/UI/Modal.tsx","components/Cart/CartItem.tsx","components/Cart/Checkout.tsx","components/Cart/Cart.tsx","components/Cart/CartIcon.js","components/Layout/Header/HeaderCartButton.tsx","assets/meals.jpg","components/Layout/Header/Header.tsx","components/Meals/MealsSummary.tsx","components/UI/Input/Input.tsx","components/Meals/MealItemForm.tsx","components/Meals/MealItem.tsx","components/Meals/Meals.tsx","store/CartContextProvider.tsx","App.tsx","index.tsx"],"names":["module","exports","CartContext","React","createContext","items","totalAmount","removeItem","id","addItem","item","clearCart","Backdrop","props","className","style","backdrop","onClick","onClose","ModalOverlay","modal","children","portalElement","document","getElementById","Modal","ReactDOM","createPortal","CartItem","price","toFixed","cartItem","name","summary","amount","actions","onRemove","onAdd","isEmpty","value","trim","Checkout","useState","street","city","postalCode","formInputsValidity","setFormInputsValidity","nameInputRef","useRef","streetInputRef","postalCodeInputRef","cityInputRef","nameControlClasses","control","invalid","streetControlClasses","postalCodeControlClasses","cityControlClasses","form","onSubmit","event","preventDefault","current","enteredName","enteredStreet","enteredPostalCode","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredCityIsValid","enteredPostalCodeIsValid","length","onConfirm","htmlFor","type","ref","submit","Cart","context","useContext","isSubmited","setIsSubmited","didSubmit","setDidSubmit","isCheckout","setIsCheckout","hasItems","cartItemRemoveHandler","cartItemAddHandler","submitOrderHandler","userData","a","fetch","method","body","JSON","stringify","user","orderedItems","cartItems","map","bind","modalActions","buttonAlt","button","submittingModalContent","successfulSubmit","cartModalContent","total","CartIcon","xmlns","viewBox","fill","d","HeaderCartButton","btnHighLighted","setBtnHighLighted","numberOfCartItems","reduce","curNum","btnStyles","cartButton","bump","useEffect","timer","setTimeout","clearTimeout","onShowCart","icon","badge","Header","header","headerTitle","src","mealsImage","alt","MealsSummary","mealsSummary","Input","forwardRef","input","label","MealItemForm","amountIsValid","setAmountIsValid","amountInputRef","enteredAmount","enteredAmountNumber","onAddItemAmount","min","max","step","defaultValue","MealItem","meals","mealsName","mealsDescriptione","description","mealsPrice","Meals","listOfMeals","setListOfMeals","isLoading","setIsLoading","httpError","setHttpError","response","ok","Error","json","key","responseData","mealsArray","push","mealsAPI","catch","error","message","mealError","mealsWindow","mealSection","defaultCart","cartReducer","state","action","updatedItems","newTotalAmout","existingCartItemIndex","findIndex","existingCartItem","updatedItem","concat","filter","CartContextProvider","useReducer","cartState","dispatchCart","cartContext","Provider","App","cartIsShown","setCartIsShown","render"],"mappings":"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","file":"static/js/main.4ef0bf71.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Checkout_form__1Uevg\",\"control\":\"Checkout_control__1O0kX\",\"actions\":\"Checkout_actions__2O4RO\",\"submit\":\"Checkout_submit__3-1YB\",\"invalid\":\"Checkout_invalid__1DKHQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cartItems\":\"Cart_cartItems__3Nn3N\",\"total\":\"Cart_total__24zm-\",\"actions\":\"Cart_actions__A6GrR\",\"buttonAlt\":\"Cart_buttonAlt__3Fv8Q\",\"button\":\"Cart_button__3ZG4u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cartItem\":\"CartItem_cartItem__1ZEKn\",\"summary\":\"CartItem_summary__yd7iL\",\"price\":\"CartItem_price__2dvUs\",\"amount\":\"CartItem_amount__2vTzP\",\"actions\":\"CartItem_actions__gfJbq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cartButton\":\"HeaderCartButton_cartButton__2mvm-\",\"icon\":\"HeaderCartButton_icon__3Aj5K\",\"badge\":\"HeaderCartButton_badge__WJ7tY\",\"bump\":\"HeaderCartButton_bump__16T45\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meals\":\"MealItem_meals__1EIOQ\",\"mealsName\":\"MealItem_mealsName__3JO3w\",\"mealsDescriptione\":\"MealItem_mealsDescriptione__23zT1\",\"mealsPrice\":\"MealItem_mealsPrice__3_Oq_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__32o5u\",\"headerTitle\":\"Header_headerTitle__3WZiQ\",\"main-image\":\"Header_main-image__18yW9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mealsWindow\":\"Meals_mealsWindow__2C7d9\",\"mealError\":\"Meals_mealError__1o6ri\",\"mealSection\":\"Meals_mealSection__Llbj1\",\"modal\":\"Meals_modal__3w8oC\",\"slide-down\":\"Meals_slide-down__2HbX3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__2jv-v\",\"modal\":\"Modal_modal__NOwxZ\",\"slide-down\":\"Modal_slide-down__1EXsj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mealsSummary\":\"MealsSummary_mealsSummary__1MHRt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__3klUI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"MealItemForm_form__1tLoZ\"};","\r\nimport React from 'react';\r\nimport { ItemCtxType } from './CartContextProvider';\r\n\r\nconst CartContext = React.createContext<CartContextType>({\r\n    items: [],\r\n    totalAmount: 0,\r\n    removeItem: (id: string) => { },\r\n    addItem: (item: ItemCtxType) => { },\r\n    clearCart: () => {}\r\n})\r\n\r\nexport default CartContext;\r\n\r\n\r\n//types\r\nexport type CartContextType = {\r\n    items: Array<ItemCtxType>,\r\n    totalAmount: number,\r\n    removeItem: (id: string) => void,\r\n    addItem: (item: ItemCtxType) => void,\r\n    clearCart: () => void,\r\n}","\r\n//@ts-nocheck\r\nimport React, { Fragment } from 'react';\r\nimport style from './Modal.module.css';\r\nimport  ReactDOM  from 'react-dom';\r\n\r\nconst Backdrop = (props:any) => {\r\n    return <div className={style.backdrop} onClick={props.onClose}></div>\r\n}\r\n\r\nconst ModalOverlay = (props: any) => {\r\n    return (\r\n    <div className={style.modal}>\r\n        {props.children}\r\n    </div>\r\n    );\r\n};\r\n\r\nconst portalElement = document.getElementById('overlays');\r\n\r\nconst Modal = (props: any) => {\r\n    return (\r\n    <Fragment>\r\n            {ReactDOM.createPortal(<Backdrop onClose={props.onClose}/>, portalElement)}\r\n            {ReactDOM.createPortal(<ModalOverlay>{props.children}</ModalOverlay>,\r\n                portalElement\r\n                )}\r\n                </Fragment>\r\n            );\r\n};\r\n\r\nexport default Modal;","import React from 'react';\r\nimport style from './CartItem.module.css'\r\n\r\n const CartItem = (props: PropsType) => {\r\n\r\n    const price = `$${props.price.toFixed(2)}`;\r\n\r\n    return (\r\n      <li className={style.cartItem}>\r\n        <div>\r\n          <h2>{props.name}</h2>\r\n          <div className={style.summary}>\r\n            <span className={style.price}>{price}</span>\r\n            <span className={style.amount}>x {props.amount}</span>\r\n          </div>\r\n        </div>\r\n        <div className={style.actions}>\r\n          <button onClick={props.onRemove}>−</button>\r\n          <button onClick={props.onAdd}>+</button>\r\n        </div>\r\n      </li>\r\n    );\r\n  };\r\n\r\nexport default CartItem;\r\n\r\n//types\r\n\r\ntype PropsType = {\r\n    name: string,\r\n    amount: number,\r\n    price: number\r\n    onRemove: (id: any) => void,\r\n    onAdd: (item: any) => void\r\n}","import { useRef, useState } from 'react';\r\nimport { UserDataType } from './Cart';\r\nimport style from './Checkout.module.css';\r\n\r\nconst isEmpty = (value: string) => value.trim() === '';\r\nconst isFiveChars = (value: string) => value.trim().length === 5;\r\n\r\nexport const Checkout = (props: PropsType) => {\r\n\r\n\r\n    const [formInputsValidity, setFormInputsValidity] = useState({\r\n        name: true,\r\n        street: true,\r\n        city: true,\r\n        postalCode: true,\r\n      });\r\n\r\n\r\n  const nameInputRef = useRef<HTMLInputElement | null>(null);\r\n  const streetInputRef = useRef<HTMLInputElement | null>(null);\r\n  const postalCodeInputRef = useRef<HTMLInputElement | null>(null);\r\n  const cityInputRef = useRef<HTMLInputElement | null>(null);\r\n\r\nconst confirmHandler = (event: React.SyntheticEvent) => {\r\n    event.preventDefault();\r\n\r\n    if (nameInputRef && nameInputRef.current) {\r\n    const enteredName = nameInputRef.current.value;\r\n\r\n    if (streetInputRef && streetInputRef.current) {\r\n    const enteredStreet = streetInputRef.current.value;\r\n\r\n    if (postalCodeInputRef && postalCodeInputRef.current) {\r\n    const enteredPostalCode = postalCodeInputRef.current.value;\r\n\r\n    if (cityInputRef && cityInputRef.current) {\r\n    const enteredCity = cityInputRef.current.value;\r\n\r\n    const enteredNameIsValid = !isEmpty(enteredName);\r\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\r\n    const enteredCityIsValid = !isEmpty(enteredCity);\r\n    const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode);\r\n\r\n    setFormInputsValidity({\r\n      name: enteredNameIsValid,\r\n      street: enteredStreetIsValid,\r\n      city: enteredCityIsValid,\r\n      postalCode: enteredPostalCodeIsValid,\r\n    });\r\n\r\n    const formIsValid =\r\n      enteredNameIsValid &&\r\n      enteredStreetIsValid &&\r\n      enteredCityIsValid &&\r\n      enteredPostalCodeIsValid;\r\n\r\n    if (!formIsValid) {\r\n      return;\r\n    }\r\n\r\n    // Submit cart data\r\n\r\n    props.onConfirm({\r\n        name:enteredName,\r\n        street: enteredStreet,\r\n        city: enteredCity,\r\n        postalCode: enteredPostalCode,\r\n    })\r\n\r\n\r\n    }}}}\r\n\r\n\r\n  }\r\n\r\n  const nameControlClasses = `${style.control} ${\r\n    formInputsValidity.name ? '' : style.invalid\r\n  }`;\r\n  const streetControlClasses = `${style.control} ${\r\n    formInputsValidity.street ? '' : style.invalid\r\n  }`;\r\n  const postalCodeControlClasses = `${style.control} ${\r\n    formInputsValidity.postalCode ? '' : style.invalid\r\n  }`;\r\n  const cityControlClasses = `${style.control} ${\r\n    formInputsValidity.city ? '' : style.invalid\r\n  }`;\r\n\r\n\r\n\r\nreturn <form className={style.form} onSubmit={confirmHandler}>\r\n    <div className={nameControlClasses}>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input type=\"text\" id='name' ref={nameInputRef} />\r\n        {!formInputsValidity.name && <p>Please enter a valid name!</p>}\r\n    </div>\r\n    <div className={postalCodeControlClasses}>\r\n        <label htmlFor=\"postalCode\">Postal Code</label>\r\n        <input type=\"text\" id='postalCode' ref={postalCodeInputRef}/>\r\n        {!formInputsValidity.postalCode && (\r\n          <p>Please enter a valid postal code (5 characters long)!</p>)}\r\n    </div>\r\n    <div className={cityControlClasses}>\r\n        <label htmlFor=\"city\">City</label>\r\n        <input type=\"text\" id='city' ref={cityInputRef} />\r\n        {!formInputsValidity.city && <p>Please enter a valid city!</p>}\r\n    </div>\r\n    <div className={streetControlClasses}>\r\n        <label htmlFor=\"street\">Street</label>\r\n        <input type=\"text\" id='street' ref={streetInputRef} />\r\n        {!formInputsValidity.street && <p>Please enter a valid street!</p>}\r\n    </div>\r\n    <div className={style.actions}>\r\n    <button type='button' onClick={props.onClose}>Cancel</button>\r\n    <button className={style.submit} >Confirm</button>\r\n    </div>\r\n</form>\r\n}\r\n\r\n\r\n//types\r\nexport type PropsType = {\r\n    onClose: ()=>void\r\n    onConfirm: (data: UserDataType) => void\r\n}\r\n\r\n\r\n","import { useContext, useState } from 'react';\r\nimport CartContext from '../../store/cart-context';\r\nimport { ItemCtxType } from '../../store/CartContextProvider';\r\nimport Modal from '../UI/Modal';\r\nimport style from './Cart.module.css';\r\nimport CartItem from './CartItem';\r\nimport { Checkout } from './Checkout';\r\n\r\ntype PropsType = {\r\n  onClose: () => void\r\n}\r\n\r\nconst Cart = (props: PropsType) => {\r\n  const context = useContext(CartContext);\r\n  const [isSubmited, setIsSubmited] = useState(false);\r\n  const [didSubmit, setDidSubmit] = useState(false);\r\n  const [isCheckout, setIsCheckout] = useState<boolean>(false)\r\n\r\n  const totalAmount = `$${context.totalAmount.toFixed(2)}`;\r\n  const hasItems = context.items.length > 0;\r\n\r\n  const cartItemRemoveHandler = (id: string) => {\r\n    context.removeItem(id)\r\n  }\r\n\r\n  const cartItemAddHandler = (item: ItemCtxType) => {\r\n    context.addItem({ ...item, amount: 1 })\r\n  }\r\n\r\n  const orderHandler = () => {\r\n    setIsCheckout(true)\r\n  }\r\n\r\n  const submitOrderHandler = async (userData: UserDataType) => {\r\n    setIsSubmited(true);\r\n    await fetch('https://the-food-order-app-a37b2-default-rtdb.firebaseio.com/order.json', {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        user: userData,\r\n        orderedItems: context.items\r\n      })\r\n    })\r\n    setIsSubmited(false);\r\n    setDidSubmit(true);\r\n    context.clearCart();\r\n\r\n\r\n  }\r\n\r\n  const cartItems = (\r\n    <ul className={style.cartItems}>\r\n      {context.items.map((item) => (\r\n        <CartItem\r\n          key={item.id}\r\n          name={item.name}\r\n          price={item.price}\r\n          amount={item.amount}\r\n          onRemove={cartItemRemoveHandler.bind(null, item.id)}\r\n          onAdd={cartItemAddHandler.bind(null, item)}\r\n\r\n        />\r\n      )\r\n      )}\r\n    </ul>\r\n  );\r\n\r\n\r\n\r\n  const modalActions = (\r\n\r\n    <div className={style.actions}>\r\n      <button className={style.buttonAlt} onClick={props.onClose}>\r\n        Close\r\n      </button>\r\n      {hasItems && (\r\n        <button className={style.button} onClick={orderHandler}>\r\n          Order\r\n        </button>\r\n      )}\r\n    </div>\r\n  )\r\n\r\n  const submittingModalContent = <p>Sending the order...</p>\r\n  const successfulSubmit = (\r\n    <>\r\n      <p>Submited succssefully</p>\r\n      <div className={style.actions}>\r\n        <button className={style.button} onClick={props.onClose}>\r\n          Close\r\n        </button>\r\n      </div>\r\n    </>\r\n  )\r\n\r\n  const unsuccessfulSubmit = (\r\n    <>\r\n      <p>Submited unsuccessefully</p>\r\n      <div className={style.actions}>\r\n        <button className={style.button} onClick={props.onClose}>\r\n          Close\r\n        </button>\r\n      </div>\r\n    </>\r\n  )\r\n\r\n  const cartModalContent = <>{cartItems}\r\n    <div className={style.total}>\r\n      <span>Total Amount</span>\r\n      <span>{totalAmount}</span>\r\n    </div>\r\n    {isCheckout && <Checkout onClose={props.onClose} onConfirm={submitOrderHandler} />}\r\n    {!isCheckout && modalActions}\r\n  </>\r\n\r\n  return (\r\n    <Modal onClose={props.onClose}>\r\n{!isSubmited && !didSubmit && cartModalContent}\r\n{isSubmited && submittingModalContent}\r\n{!isSubmited && didSubmit && successfulSubmit}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n\r\n//types\r\nexport type UserDataType = {\r\n  name: string,\r\n  street: string,\r\n  city: string,\r\n  postalCode: string,\r\n}","const CartIcon = () => {\r\n    return (\r\n      <svg\r\n        xmlns='http://www.w3.org/2000/svg'\r\n        viewBox='0 0 20 20'\r\n        fill='currentColor'\r\n      >\r\n        <path d='M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z' />\r\n      </svg>\r\n    );\r\n  };\r\n\r\n  export default CartIcon;","\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport CartIcon from '../../Cart/CartIcon';\r\nimport style from './HeaderCartButton.module.css';\r\nimport CartContext from '../../../store/cart-context';\r\n\r\nfunction HeaderCartButton(props: PropsType) {\r\n\r\n    const [btnHighLighted, setBtnHighLighted] = useState(false)\r\n    const context = useContext(CartContext);\r\n\r\n    const numberOfCartItems = context.items.reduce((curNum, item) => {\r\n        return curNum + item.amount\r\n    }, 0);\r\n\r\n    const { items } = context;\r\n\r\n    const btnStyles = `${style.cartButton} ${btnHighLighted ? style.bump : ''}`;\r\n\r\n    useEffect(() => {\r\n        if (items.length === 0) {\r\n            return;\r\n        }\r\n        setBtnHighLighted(true);\r\n        const timer = setTimeout(() => {\r\n            setBtnHighLighted(false);\r\n        }, 300);\r\n\r\n        return (() => {\r\n            clearTimeout(timer)\r\n        })\r\n\r\n    }, [items])\r\n\r\n    return (\r\n                <button className={btnStyles} onClick= {props.onShowCart}>\r\n            <span className={style.icon}>\r\n                <CartIcon />\r\n            </span>\r\n            <span>Your Cart</span>\r\n            <span className={style.badge}> {numberOfCartItems} </span>\r\n        </button>\r\n\r\n    );\r\n};\r\n\r\nexport default HeaderCartButton;\r\n\r\n//types\r\ntype PropsType = {\r\n    onShowCart: () => void,\r\n}","export default __webpack_public_path__ + \"static/media/meals.a9840392.jpg\";","import React from 'react';\r\nimport style from './Header.module.css';\r\nimport HeaderCartButton from './HeaderCartButton';\r\nimport mealsImage from '../../../assets/meals.jpg'\r\n\r\nfunction Header(props: PropsType) {\r\n    return (\r\n        <>\r\n            <div className={style.header}>\r\n                <span className={style.headerTitle}>React Meals</span>\r\n                <HeaderCartButton onShowCart={props.onShowCart} />\r\n            </div>\r\n            <div className={style['main-image']}>\r\n                <img src={mealsImage} alt='A table full of delicious food!' />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n\r\n//types\r\ntype PropsType = {\r\n    onShowCart: () => void,\r\n}","import style from './MealsSummary.module.css';\r\n\r\nconst MealsSummary = () => {\r\n  return (\r\n    <section className={style.mealsSummary}>\r\n      <h2>Delicious Food, Delivered To You</h2>\r\n      <p>\r\n        Choose your favorite meal from our broad selection of available meals\r\n        and enjoy a delicious lunch or dinner at home.\r\n      </p>\r\n      <p>\r\n        All our meals are cooked with high-quality ingredients, just-in-time and\r\n        of course by experienced chefs!\r\n      </p>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MealsSummary;","import React, { DetailedHTMLProps, ForwardedRef, InputHTMLAttributes, MutableRefObject, } from 'react';\r\nimport style from './Input.module.css';\r\n\r\nexport type PropsType = {\r\n\r\n    label: string,\r\n    input: {\r\n          id: string,\r\n          type: string,\r\n          min: string,\r\n          max: string,\r\n          step: string,\r\n          defaultValue: string,\r\n    }\r\n}\r\n\r\nexport type Ref = HTMLInputElement | null\r\n\r\nconst Input = React.forwardRef<Ref, PropsType>((props, ref) => {\r\n  return (\r\n    <div className={style.input}>\r\n      <label htmlFor={props.input.id}>{props.label}</label>\r\n      <input ref={ref} {...props.input} />\r\n    </div>\r\n  )\r\n});\r\n\r\nexport default Input;","import React, { FormEvent, useContext, useEffect, useRef, useState } from 'react';\r\nimport CartContext from '../../store/cart-context';\r\nimport Input from '../UI/Input/Input';\r\nimport style from './MealItemForm.module.css';\r\n\r\nconst MealItemForm = (props: PropsType) => {\r\n\r\n    const [amountIsValid, setAmountIsValid] = useState(true);\r\n    const amountInputRef = useRef<HTMLInputElement | null>(null);\r\n\r\n    const submitHandler = (event: FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n\r\n        if (amountInputRef && amountInputRef.current) {\r\n            const enteredAmount = amountInputRef.current.value;\r\n            const enteredAmountNumber = +enteredAmount;\r\n\r\n            if (enteredAmount.trim().length === 0 ||\r\n                enteredAmountNumber < 1 ||\r\n                enteredAmountNumber > 5) {\r\n                    setAmountIsValid(false)\r\n                return;\r\n            }\r\n            props.onAddItemAmount(enteredAmountNumber);\r\n        };\r\n\r\n    };\r\n\r\nconst ctx = useContext(CartContext)\r\n\r\n    return (\r\n        <form className={style.form} onSubmit={submitHandler}>\r\n            <Input label='Amount'\r\n                ref={amountInputRef}\r\n                input={{\r\n                    id: 'm1' + props.id,\r\n                    type: 'number',\r\n                    min: '1',\r\n                    max: '5',\r\n                    step: '1',\r\n                    defaultValue: '0',\r\n                }} />\r\n                {!amountIsValid && <p>Please enter a valid amount (1-5).</p>}\r\n            <button >Add to cart </button>\r\n\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default MealItemForm;\r\n\r\n//types\r\n\r\ntype PropsType = {\r\n    id: string,\r\n    onAddItemAmount: (e: number) => void,\r\n}","import React, { useContext, useEffect } from 'react';\r\nimport CartContext from '../../store/cart-context';\r\nimport style from './MealItem.module.css'\r\nimport MealItemForm from './MealItemForm';\r\nimport { MealItemType } from './Meals';\r\n\r\nconst MealItem = (props: PropsType) => {\r\n\r\n    const context = useContext(CartContext);\r\n\r\n    const addItemToCartHandler = (amount: number) => {\r\n        context.addItem({\r\n            id: props.item.id,\r\n            name: props.item.name,\r\n            amount: amount,\r\n            price: props.item.price,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <li className={style.meals}>\r\n                <div className={style.mealsName}>{props.item.name}</div>\r\n                <div className={style.mealsDescriptione}>{props.item.description}</div>\r\n                <div className={style.mealsPrice}>{props.item.price}</div>\r\n                <MealItemForm id={props.item.id} onAddItemAmount={addItemToCartHandler} />\r\n            </li>\r\n            </>\r\n    );\r\n};\r\n\r\nexport default MealItem;\r\n\r\n\r\n//types\r\n// type ItemType = {\r\n//     id: string,\r\n//     name: string,\r\n//     price: number,\r\n//     description: string\r\n// }\r\n\r\ntype PropsType = {\r\n    item: MealItemType\r\n}\r\n","\r\nimport React, { useEffect, useState } from 'react';\r\nimport style from './Meals.module.css';\r\nimport MealsSummary from './MealsSummary';\r\nimport MealItem from './MealItem';\r\n\r\nfunction Meals() {\r\n\r\n    const [listOfMeals, setListOfMeals] = useState<ListOfMealsType>([]);\r\n    const [isLoading, setIsLoading] = useState<boolean>(true);\r\n    const [httpError, setHttpError] = useState<null | boolean>(null);\r\n\r\n    useEffect(() => {\r\n        const mealsAPI = async () => {\r\n            const response = await fetch('https://the-food-order-app-a37b2-default-rtdb.firebaseio.com/meals.json');\r\n            if (!response.ok) {\r\n                throw new Error('Something went wrong');\r\n            }\r\n            const responseData = await response.json();\r\n            const mealsArray = [];\r\n\r\n\r\n\r\n            for (const key in responseData) {\r\n                mealsArray.push({\r\n                    id: key,\r\n                    name: responseData[key].name,\r\n                    description: responseData[key].description,\r\n                    price: responseData[key].price,\r\n                })\r\n            };\r\n\r\n\r\n            setListOfMeals(mealsArray);\r\n            setIsLoading(false);\r\n        }\r\n        mealsAPI().catch(error => {\r\n            setIsLoading(false);\r\n            setHttpError(error.message)\r\n        }\r\n        )\r\n    }, [])\r\n\r\n    if (httpError) {\r\n        return (\r\n            <section className={style.mealError}>\r\n                <p>{httpError}</p>\r\n            </section>\r\n        )\r\n    }\r\n\r\n    // if (isLoading) {\r\n    //     return (\r\n    //         <section className={style.mealError}>\r\n    //             <p>Loading...</p>\r\n    //         </section>\r\n    //     )\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <MealsSummary />\r\n            {isLoading && <p>Loading...</p>}\r\n            <div className={style.mealsWindow}>\r\n                <ul >\r\n                    {listOfMeals.map(item => {\r\n                        return (\r\n                            <div className={style.mealSection} key={item.id}>\r\n                                <MealItem item={item} />\r\n                            </div>\r\n                        )\r\n                    }\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Meals;\r\n\r\n//types\r\n\r\nexport type MealItemType = {\r\n    id: string,\r\n    name: string,\r\n    description: string,\r\n    price: number,\r\n}\r\n\r\nexport type ListOfMealsType = Array<MealItemType>\r\n\r\n","import React, { useContext, useReducer } from 'react';\r\nimport CartContext from './cart-context';\r\n\r\nconst defaultCart: DefaultStateType = {\r\n    items: [],\r\n    totalAmount: 0\r\n}\r\n\r\nconst cartReducer = (state = defaultCart, action: ActionsType) => {\r\n    if (action.type === 'ADD_ITEM') {\r\n\r\n        const newTotalAmout = state.totalAmount + action.item.price * action.item.amount;\r\n        const existingCartItemIndex = state.items.findIndex(\r\n            (item) => item.id === action.item.id\r\n        );\r\n        const existingCartItem = state.items[existingCartItemIndex];\r\n        let updatedItems;\r\n        if (existingCartItem) {\r\n            const updatedItem = {\r\n                ...existingCartItem,\r\n                amount: existingCartItem.amount + action.item.amount\r\n            };\r\n            updatedItems = [...state.items];\r\n            updatedItems[existingCartItemIndex] = updatedItem;\r\n        } else {\r\n            updatedItems = state.items.concat(action.item);\r\n        }\r\n        return {\r\n            items: updatedItems,\r\n            totalAmount: newTotalAmout\r\n        }\r\n    };\r\n\r\n    if (action.type === 'REMOVE_ITEM') {\r\n        const existingCartItemIndex = state.items.findIndex((item) => item.id === action.id);\r\n        const existingCartItem = state.items[existingCartItemIndex];\r\n        const newTotalAmout = state.totalAmount - existingCartItem.price;\r\n        let updatedItems;\r\n        if (existingCartItem.amount === 1) {\r\n            updatedItems = state.items.filter(item => item.id !== action.id)\r\n        } else {\r\n            const updatedItem = { ...existingCartItem, amount: existingCartItem.amount - 1 };\r\n            updatedItems = [...state.items];\r\n            updatedItems[existingCartItemIndex] = updatedItem;\r\n        }\r\n        return {\r\n            items: updatedItems,\r\n            totalAmount: newTotalAmout\r\n        }\r\n    };\r\nif (action.type === 'CLEAR_CART') {\r\n    return defaultCart;\r\n}\r\n\r\n    return state;\r\n}\r\n\r\n\r\nconst CartContextProvider = (props: { children: React.ReactNode }) => {\r\n\r\n    const [cartState, dispatchCart] = useReducer(cartReducer, defaultCart);\r\n\r\n    const addItemToCartHandler = (item: ItemCtxType) => {\r\n        dispatchCart({ type: 'ADD_ITEM', item: item })\r\n    }\r\n\r\n    const removeItemFromCart = (id: string) => {\r\n        dispatchCart({ type: 'REMOVE_ITEM', id: id })\r\n    }\r\n    const clearCart = () => {\r\n        dispatchCart({type: 'CLEAR_CART'})\r\n    }\r\n    const cartContext = {\r\n        items: cartState.items,\r\n        totalAmount: cartState.totalAmount,\r\n        addItem: addItemToCartHandler,\r\n        removeItem: removeItemFromCart,\r\n        clearCart: clearCart\r\n    }\r\n\r\n    return (\r\n        <CartContext.Provider\r\n            value={cartContext}>\r\n            {props.children}\r\n        </CartContext.Provider>\r\n    )\r\n}\r\n\r\nexport default CartContextProvider;\r\n\r\n//types\r\nexport type ItemCtxType = {\r\n    id: string,\r\n    name: string,\r\n    price: number,\r\n    amount: number,\r\n}\r\n\r\ntype DefaultStateType = {\r\n    items: Array<ItemCtxType>,\r\n    totalAmount: number\r\n}\r\n\r\ntype AddItemActionType = { type: 'ADD_ITEM', item: ItemCtxType };\r\ntype RemoveItemActionType = { type: 'REMOVE_ITEM', id: string };\r\ntype ClearCartActionType = { type: 'CLEAR_CART' };\r\n\r\ntype ActionsType = AddItemActionType | RemoveItemActionType | ClearCartActionType","import React, { useState } from 'react';\nimport './App.css';\nimport Cart from './components/Cart/Cart';\nimport Header from './components/Layout/Header/Header';\nimport Meals from './components/Meals/Meals';\nimport CartContextProvider from './store/CartContextProvider';\n\nfunction App() {\n\n  const [cartIsShown, setCartIsShown] = useState(false);\n\n  function showCartHandler() {\n    setCartIsShown(true);\n  }\n\n  function hideCartHandler() {\n    setCartIsShown(false)\n  }\n\n\n  return (\n    <CartContextProvider>\n      <div className=\"App\">\n        {cartIsShown && <Cart onClose={hideCartHandler} />}\n        <Header onShowCart={showCartHandler} />\n        <Meals />\n      </div>\n    </CartContextProvider>\n  );\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}